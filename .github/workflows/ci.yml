name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      # Setup Node.js using the version from the matrix
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm" # built-in pnpm cache support

      # Install pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # ‚Üê this is mandatory
          run_install: false # skip its built-in install step

      # Optional: Restore pnpm store if needed, but pnpm/action-setup often handles caching well.
      # The pnpm/action-setup action itself usually configures caching for pnpm's store.
      # If more explicit control over caching is needed, actions/cache can be used here.
      # - uses: actions/cache@v3
      #   with:
      #     path: ~/.pnpm-store
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Lint early to catch style errors
      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm test

      - name: Coverage
        run: pnpm run coverage
